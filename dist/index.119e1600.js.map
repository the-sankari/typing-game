{"mappings":"MAAA,MACMA,EAAsBC,SAASC,eAAe,gBAC9CC,EAAoBF,SAASC,eAAe,cAC5CE,EAAeH,SAASC,eAAe,SAgC7CG,eAAeC,IACb,MAAMC,QANCC,MA9BoB,iCA+BxBC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,GAAQA,EAAKC,UAKrBb,EAAoBc,UAAY,GAChCP,EAAMQ,MAAM,IAAIC,SAAQC,IACtB,MAAMC,EAAgBjB,SAASkB,cAAc,QAC7CD,EAAcE,UAAYH,EAC1BjB,EAAoBqB,YAAYH,EAAc,IAEhDf,EAAkBmB,MAAQ,KAM1BlB,EAAagB,UAAY,EACzBG,EAAY,IAAIC,KAChBC,aAAY,KACVC,MAAMN,UAKDO,KAAKC,OAAO,IAAIJ,KAASD,GAAa,IALX,GAC/B,I,CANL,IAAIA,EA1CJpB,EAAkB0B,iBAAiB,SAAS,KAC1C,MAAMC,EAAa9B,EAAoB+B,iBAAiB,QAClDC,EAAa7B,EAAkBmB,MAAMP,MAAM,IAEjD,IAAIkB,GAAU,EACdH,EAAWd,SAAQ,CAACE,EAAegB,KACjC,MAAMjB,EAAYe,EAAWE,GACZ,MAAbjB,GACFC,EAAciB,UAAUC,OAAO,WAC/BlB,EAAciB,UAAUC,OAAO,aAC/BH,GAAU,GACDhB,IAAcC,EAAcE,WACrCF,EAAciB,UAAUE,IAAI,WAC5BnB,EAAciB,UAAUC,OAAO,eAE/BlB,EAAciB,UAAUC,OAAO,WAC/BlB,EAAciB,UAAUE,IAAI,aAC5BJ,GAAU,E,IAIVA,GAAS3B,GAAgB,IAkC/BA,G","sources":["src/script.js"],"sourcesContent":["const RANDOM_QUOTE_API_URL = 'http://api.quotable.io/random'\nconst quoteDisplayElement = document.getElementById('quoteDisplay')\nconst quoteInputElement = document.getElementById('quoteInput')\nconst timerElement = document.getElementById('timer')\n\nquoteInputElement.addEventListener('input', () => {\n  const arrayQuote = quoteDisplayElement.querySelectorAll('span')\n  const arrayValue = quoteInputElement.value.split('')\n\n  let correct = true\n  arrayQuote.forEach((characterSpan, index) => {\n    const character = arrayValue[index]\n    if (character == null) {\n      characterSpan.classList.remove('correct')\n      characterSpan.classList.remove('incorrect')\n      correct = false\n    } else if (character === characterSpan.innerText) {\n      characterSpan.classList.add('correct')\n      characterSpan.classList.remove('incorrect')\n    } else {\n      characterSpan.classList.remove('correct')\n      characterSpan.classList.add('incorrect')\n      correct = false\n    }\n  })\n\n  if (correct) renderNewQuote()\n})\n\nfunction getRandomQuote() {\n  return fetch(RANDOM_QUOTE_API_URL)\n    .then(response => response.json())\n    .then(data => data.content)\n}\n\nasync function renderNewQuote() {\n  const quote = await getRandomQuote()\n  quoteDisplayElement.innerHTML = ''\n  quote.split('').forEach(character => {\n    const characterSpan = document.createElement('span')\n    characterSpan.innerText = character\n    quoteDisplayElement.appendChild(characterSpan)\n  })\n  quoteInputElement.value = null\n  startTimer()\n}\n\nlet startTime\nfunction startTimer() {\n  timerElement.innerText = 0\n  startTime = new Date()\n  setInterval(() => {\n    timer.innerText = getTimerTime()\n  }, 1000)\n}\n\nfunction getTimerTime() {\n  return Math.floor((new Date() - startTime) / 1000)\n}\n\nrenderNewQuote()"],"names":["$086078325312f986$var$quoteDisplayElement","document","getElementById","$086078325312f986$var$quoteInputElement","$086078325312f986$var$timerElement","async","$086078325312f986$var$renderNewQuote","quote","fetch","then","response","json","data","content","innerHTML","split","forEach","character","characterSpan","createElement","innerText","appendChild","value","$086078325312f986$var$startTime","Date","setInterval","timer","Math","floor","addEventListener","arrayQuote","querySelectorAll","arrayValue","correct","index","classList","remove","add"],"version":3,"file":"index.119e1600.js.map","sourceRoot":"../"}